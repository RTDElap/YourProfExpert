#nullable disable

using YourProfExpert.TelegramBot.Bot.Builders;
using Microsoft.Extensions.DependencyInjection;
using YourProfExpert.TelegramBot.ChainHandlers.Handlers.Interfaces;
using YourProfExpert.TelegramBot.Extensions;
using YourProfExpert.Core.Services;
using YourProfExpert.TestOfKlimov;
using YourProfExpert.Infrastructure.Contexts.Creators.Interfaces;
using Microsoft.Extensions.Logging;
using YourProfExpert.TelegramBot.Commands;

namespace YourProfExpert.TelegramBot;

internal static partial class Program
{
    static async Task Main()
    {
        var botBuilder = new BotBuilder();

#region –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤

        // –ß—Ç–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
        botBuilder
            .ReadConfigFrom( Path.Combine( Environment.CurrentDirectory, "appsettings.json" ) )
            .AddBotConfig();

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        botBuilder.Services
            .AddLogging
            (
                l => l
                    .AddConsole()
                    .SetMinimumLevel(LogLevel.Trace)
            );

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        botBuilder
            .AddSqliteCreator("Sqlite")
            .AddTestService()
            .AddExecutorTestService()
            .AddProfessionsService()
            .AddUserService()
            .AddCommandHandler();
#endregion

#region –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ø–æ—á–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        botBuilder
            .UseCommandHandler();
#endregion

#region –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ ICommandHandler
        botBuilder
            .AddCustomCommand<CommandTest>("/test", $"üìÑ {KlimovTestData.KLIMOV_TITLE}")
            .WithCreateUser()
            .Build();

        botBuilder
            .AddCommand<CommandStart>("/start", "üè† –ì–ª–∞–≤–Ω–∞—è", "üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            .AddCommand<CommandAbout>("üë§ –û –±–æ—Ç–µ")
            .AddCommand<CommandTests>("/tests", "üìÑ –¢–µ—Å—Ç—ã")
            .AddCommand<CommandRedirectDialog>("/dialog")
            .AddCommand<CommandSelectAnswer>("/selectAnswer");

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await botBuilder.ServiceProvider.GetService<IContextCreator>()
            .CreateContext()
            .AddKlimovTestAsync();

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ—Å—Ç–∞–º–∏ –≤ ITestService
        botBuilder.ServiceProvider.GetService<ITestService>()
            .AddKlimovTest();

        // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º–∏
        botBuilder.ServiceProvider.GetService<IProfessionsService>()
            .SetProfessions( botBuilder.BotConfig.Professions );
#endregion

        var bot = botBuilder.Build();

        bot.StartAsLongPolling();

        Console.ReadLine();
    }
}